/*
 * ARTIKCloudAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package cloud.artik.api.models;

import java.util.*;

public class DeviceBuilder {
    //the instance to build
    private Device device;

    /**
     * Default constructor to initialize the instance
     */
    public DeviceBuilder() {
        device = new Device();
    }

    /**
     * Device ID
     */
    public DeviceBuilder id(String id) {
        device.setId(id);
        return this;
    }

    /**
     * User ID
     */
    public DeviceBuilder uid(String uid) {
        device.setUid(uid);
        return this;
    }

    /**
     * Device Type ID
     */
    public DeviceBuilder dtid(String dtid) {
        device.setDtid(dtid);
        return this;
    }

    /**
     * Name
     */
    public DeviceBuilder name(String name) {
        device.setName(name);
        return this;
    }

    /**
     * Manifest Version
     */
    public DeviceBuilder manifestVersion(Integer manifestVersion) {
        device.setManifestVersion(manifestVersion);
        return this;
    }

    /**
     * Manifest Version Policy (LATEST, DEVICE)
     */
    public DeviceBuilder manifestVersionPolicy(String manifestVersionPolicy) {
        device.setManifestVersionPolicy(manifestVersionPolicy);
        return this;
    }

    /**
     * Needs Provider Authentication
     */
    public DeviceBuilder needProviderAuth(Boolean needProviderAuth) {
        device.setNeedProviderAuth(needProviderAuth);
        return this;
    }

    public DeviceBuilder properties(LinkedHashMap<String, Object> properties) {
        device.setProperties(properties);
        return this;
    }

    /**
     * Created On (milliseconds since epoch)
     */
    public DeviceBuilder createdOn(Long createdOn) {
        device.setCreatedOn(createdOn);
        return this;
    }

    /**
     * Is Connected
     */
    public DeviceBuilder connected(Boolean connected) {
        device.setConnected(connected);
        return this;
    }

    /**
     * Certificate Info (if any)
     */
    public DeviceBuilder certificateInfo(String certificateInfo) {
        device.setCertificateInfo(certificateInfo);
        return this;
    }

    /**
     * Certificate Signature (if any)
     */
    public DeviceBuilder certificateSignature(String certificateSignature) {
        device.setCertificateSignature(certificateSignature);
        return this;
    }

    /**
     * External ID (if any)
     */
    public DeviceBuilder eid(String eid) {
        device.setEid(eid);
        return this;
    }

    public DeviceBuilder providerCredentials(LinkedHashMap<String, Object> providerCredentials) {
        device.setProviderCredentials(providerCredentials);
        return this;
    }

    /**
     * Is shared with other users
     */
    public DeviceBuilder sharedWithOthers(Boolean sharedWithOthers) {
        device.setSharedWithOthers(sharedWithOthers);
        return this;
    }

    /**
     * Share id (if shared with me)
     */
    public DeviceBuilder sharedWithMe(String sharedWithMe) {
        device.setSharedWithMe(sharedWithMe);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Device build() {
        return device;
    }
}